/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.MatHang;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hello Kiên
 */
public class QuanLyMatHang extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuanLyMatHang
     */
    ArrayList<MatHang> listMH = new ArrayList<>();
    DefaultTableModel model;
    int index;
    
    public QuanLyMatHang() {
        initComponents();
        fillCombobox();
        
        
        
        jTabbedPane1.setSelectedIndex(1);
        btnThem.setEnabled(false);
        txtMahang.setEnabled(false);
        model = (DefaultTableModel) tblQLMH.getModel();
        
        this.ReadFile();
        fillTable();
    }
    
    void fillCombobox(){
        combobox.removeAllItems();
        combobox.addItem("Hàng thời trang");
        combobox.addItem("Hàng tiêu dùng");
        combobox.addItem("Hàng điện máy");
        combobox.addItem("Hàng gia dụng");
    }
    
    
    void ReadFile(){
        try {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream("MH.DAT"));
            listMH = (ArrayList<MatHang>) ois.readObject();
            ois.close();
            if(listMH.size()>0){
                fillTable();
                index=0;
                MatHang mh = listMH.get(index);
                writeForm(mh);
            }
            JOptionPane.showMessageDialog(this, "Open file MH.DAT");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi mở file");
        }
    }
    
    void WriteFile(){
        try {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("MH.DAT"));
            oos.writeObject(listMH);
            oos.flush();
            oos.close();
            JOptionPane.showMessageDialog(this, "Đã lưu thay đổi vào file MH.DAT");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi ghi file");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        tab1 = new javax.swing.JPanel();
        txtMahang = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenhang = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtGiaban = new javax.swing.JTextField();
        combobox = new javax.swing.JComboBox<>();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        tab2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQLMH = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Quản lý mặt hàng");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        txtMahang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMahangActionPerformed(evt);
            }
        });

        jLabel1.setText("Mã hàng:");

        jLabel2.setText("Tên hàng:");

        txtTenhang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenhangActionPerformed(evt);
            }
        });

        jLabel3.setText("Nhóm hàng:");

        jLabel4.setText("Giá bán:");

        txtGiaban.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGiabanActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tab1Layout = new javax.swing.GroupLayout(tab1);
        tab1.setLayout(tab1Layout);
        tab1Layout.setHorizontalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSua)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClear)
                        .addContainerGap(237, Short.MAX_VALUE))
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(txtMahang)
                            .addComponent(jLabel3)
                            .addComponent(combobox, 0, 142, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtTenhang, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtGiaban, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64))))
        );

        tab1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClear, btnSua, btnThem, btnXoa});

        tab1Layout.setVerticalGroup(
            tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenhang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMahang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tab1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGiaban, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(tab1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnClear))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        tab1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClear, btnSua, btnThem, btnXoa});

        jTabbedPane1.addTab("Cập nhật", tab1);

        tblQLMH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hàng", "Tên hàng", "Nhóm hàng", "Giá bán"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQLMH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLMHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQLMH);

        jLabel5.setText("* Double click in table show form");

        jLabel6.setText("** Mọi thao tác thêm, sửa, xóa dữ liệu sẽ được ghi vào file");

        javax.swing.GroupLayout tab2Layout = new javax.swing.GroupLayout(tab2);
        tab2.setLayout(tab2Layout);
        tab2Layout.setHorizontalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
                    .addGroup(tab2Layout.createSequentialGroup()
                        .addGroup(tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tab2Layout.setVerticalGroup(
            tab2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Danh sách", tab2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMahangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMahangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMahangActionPerformed

    private void txtTenhangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenhangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenhangActionPerformed

    private void txtGiabanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGiabanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGiabanActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            index = tblQLMH.getSelectedRow();
            if (index >= 0) {
                if (txtTenhang.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Hãy nhập tên hàng");
                    txtTenhang.requestFocus();
                    return;
                }

                if (txtGiaban.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Hãy nhập giá bán");
                    txtGiaban.requestFocus();
                    return;
                }
                double giaBan;
                try {
                    giaBan = Double.parseDouble(txtGiaban.getText());

                    if (giaBan<=0) {
                        JOptionPane.showMessageDialog(this, "Giá bán phải >0");
                        txtGiaban.requestFocus();
                        return;
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Nhập giá là số!");
                    txtGiaban.requestFocus();
                    return;
                }
                updateForm();
                clearForm();
                fillTable();
                JOptionPane.showMessageDialog(this, "Cập nhật thành công");
                jTabbedPane1.setSelectedIndex(1);
                WriteFile();
            } else {
                JOptionPane.showMessageDialog(this, "Chọn dữ liệu cần cập nhật trên bảng");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Cập nhật thất bại");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tblQLMHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLMHMouseClicked
        try {
            index = tblQLMH.getSelectedRow();
            if (evt.getClickCount()==2) {
                MatHang mh = listMH.get(index);
                writeForm(mh);
                jTabbedPane1.setSelectedIndex(0);
                btnSua.setEnabled(true);
                btnXoa.setEnabled(true);
                btnThem.setEnabled(false);
                txtMahang.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblQLMHMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            index = tblQLMH.getSelectedRow();
            System.out.println(index);
            if (index >= 0) {
                int check = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa dữ liệu này?");
                if (check != JOptionPane.YES_OPTION) {
                    return;
                }
                delete();
                fillTable();
               
                clearForm();
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                jTabbedPane1.setSelectedIndex(1);
                WriteFile();
            } else {
                JOptionPane.showMessageDialog(this, "Chọn dữ liệu cần xóa trên bảng");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Xóa thất bại");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            if (txtMahang.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Hãy nhập mã hàng");
                txtMahang.requestFocus();
                return;
            }
            
            int ma;
            try {
                ma = Integer.parseInt(txtMahang.getText());
                //0
                if (ma < 0) {
                    JOptionPane.showMessageDialog(this, "Nhập mã hàng là số dương");
                    txtMahang.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Nhập mã hàng là số nguyên!");
                txtMahang.requestFocus();
                return;
            }
            
            if (txtMahang.getText().length()!=4) {
                JOptionPane.showMessageDialog(this, "Nhập mã hàng có 4 chữ số!");
                txtMahang.requestFocus();
                return;
            }
            
            for(MatHang mh : listMH){
                if(txtMahang.getText().equals(mh.getMaHang()+"")){
                    JOptionPane.showMessageDialog(this, "Không được nhập trùng mã hàng!");
                    txtMahang.requestFocus();
                    return;
                }
            }

            if (txtTenhang.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Hãy nhập tên hàng");
                txtTenhang.requestFocus();
                return;
            }
            
            if (txtGiaban.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Hãy nhập giá bán");
                txtGiaban.requestFocus();
                return;
            }
            double giaBan;
            try {
                giaBan = Double.parseDouble(txtGiaban.getText());
                
                if (giaBan<=0) {
                    JOptionPane.showMessageDialog(this, "Giá bán phải >0");
                    txtGiaban.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Nhập giá là số!");
                txtGiaban.requestFocus();
                return;
            }

            addForm();
            clearForm();
            fillTable();
            JOptionPane.showMessageDialog(this, "Thêm thành công");
            jTabbedPane1.setSelectedIndex(1);
            WriteFile();
            
        } catch (Exception e) {
             JOptionPane.showMessageDialog(this, "Thêm thất bại");
             e.fillInStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> combobox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel tab1;
    private javax.swing.JPanel tab2;
    private javax.swing.JTable tblQLMH;
    private javax.swing.JTextField txtGiaban;
    private javax.swing.JTextField txtMahang;
    private javax.swing.JTextField txtTenhang;
    // End of variables declaration//GEN-END:variables

    private void fillTable() {
        model.setRowCount(0);
        for (MatHang mh : listMH) {
            model.addRow(new Object[]{mh.getMaHang(),mh.getTenHang(),mh.getNhomHang(),mh.getGiaBan()});
        }
    }

    private void writeForm(MatHang mh) {
        txtMahang.setText(mh.getMaHang()+"");
        txtTenhang.setText(mh.getTenHang());
        combobox.setSelectedItem(mh.getNhomHang());
        txtGiaban.setText(mh.getGiaBan()+"");
        tblQLMH.setRowSelectionInterval(index, index);//table chon index
    
    }
    private void addForm() {
        int maHang = Integer.parseInt(txtMahang.getText());
        String tenHang = txtTenhang.getText();
        String nhomHang = combobox.getSelectedItem()+"";
        double giaBan = Double.parseDouble(txtGiaban.getText());
        MatHang mh = new MatHang(maHang, tenHang, nhomHang, giaBan);
        listMH.add(mh);
    }
    
    private void updateForm() {
        int maHang = Integer.parseInt(txtMahang.getText());
        String tenHang = txtTenhang.getText();
        String nhomHang = combobox.getSelectedItem()+"";
        double giaBan = Double.parseDouble(txtGiaban.getText());
        
        MatHang mh = new MatHang(maHang, tenHang, nhomHang, giaBan);
        index = tblQLMH.getSelectedRow();
        listMH.set(index, mh);
    }

    private void clearForm() {
        txtMahang.setText("");
        txtGiaban.setText("");
        txtTenhang.setText("");
        combobox.setSelectedIndex(0);
        this.index = -1;
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);
        btnThem.setEnabled(true);
        txtMahang.setEnabled(true);
    }
    
    private void delete(){
        index = tblQLMH.getSelectedRow();
        listMH.remove(index);
    }
    
    
}
